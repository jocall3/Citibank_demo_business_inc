{"version":3,"file":"XbrlConverter-KF4Rws6F.js","sources":["../../components/features/XbrlConverter.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { convertJsonToXbrlStream } from '../../services/aiService.ts';\nimport { XbrlConverterIcon } from '../icons.tsx';\nimport { LoadingSpinner, MarkdownRenderer } from '../shared/index.tsx';\n\nconst exampleJson = `{\n  \"company\": \"ExampleCorp\",\n  \"year\": 2024,\n  \"quarter\": 2,\n  \"revenue\": {\n    \"amount\": 1500000,\n    \"currency\": \"USD\"\n  },\n  \"profit\": {\n    \"amount\": 250000,\n    \"currency\": \"USD\"\n  }\n}`;\n\nexport const XbrlConverter: React.FC<{ jsonInput?: string }> = ({ jsonInput: initialJsonInput }) => {\n    const [jsonInput, setJsonInput] = useState<string>(initialJsonInput || exampleJson);\n    const [xbrlOutput, setXbrlOutput] = useState<string>('');\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [error, setError] = useState<string>('');\n\n    const handleConvert = useCallback(async (jsonToConvert: string) => {\n        if (!jsonToConvert.trim()) {\n            setError('Please enter valid JSON to convert.');\n            return;\n        }\n        setIsLoading(true);\n        setError('');\n        setXbrlOutput('');\n        try {\n            const stream = convertJsonToXbrlStream(jsonToConvert);\n            let fullResponse = '';\n            for await (const chunk of stream) {\n                fullResponse += chunk;\n                setXbrlOutput(fullResponse);\n            }\n        } catch (err) {\n            const errorMessage = err instanceof Error ? err.message : 'An unknown error occurred.';\n            setError(`Failed to convert: ${errorMessage}`);\n        } finally {\n            setIsLoading(false);\n        }\n    }, []);\n\n    return (\n        <div className=\"h-full flex flex-col p-4 sm:p-6 lg:p-8 text-text-primary\">\n            <header className=\"mb-6\">\n                <h1 className=\"text-3xl font-bold flex items-center\">\n                    <XbrlConverterIcon />\n                    <span className=\"ml-3\">JSON to XBRL Converter</span>\n                </h1>\n                <p className=\"text-text-secondary mt-1\">Convert JSON data into a simplified XBRL-like XML format using AI.</p>\n            </header>\n            <div className=\"flex-grow flex flex-col gap-4 min-h-0\">\n                <div className=\"flex flex-col flex-1 min-h-0\">\n                    <label htmlFor=\"json-input\" className=\"text-sm font-medium text-text-secondary mb-2\">JSON Input</label>\n                    <textarea\n                        id=\"json-input\"\n                        value={jsonInput}\n                        onChange={(e) => setJsonInput(e.target.value)}\n                        placeholder=\"Paste your JSON here...\"\n                        className=\"flex-grow p-4 bg-surface border border-border rounded-md resize-none font-mono text-sm\"\n                    />\n                </div>\n                 <div className=\"flex-shrink-0\">\n                    <button\n                        onClick={() => handleConvert(jsonInput)}\n                        disabled={isLoading}\n                        className=\"btn-primary w-full max-w-xs mx-auto flex items-center justify-center px-6 py-3\"\n                    >\n                        {isLoading ? <LoadingSpinner /> : 'Convert to XBRL'}\n                    </button>\n                </div>\n                <div className=\"flex flex-col flex-1 min-h-0\">\n                    <label className=\"text-sm font-medium text-text-secondary mb-2\">XBRL-like XML Output</label>\n                    <div className=\"relative flex-grow p-1 bg-background border border-border rounded-md overflow-y-auto\">\n                        {isLoading && !xbrlOutput && <div className=\"flex items-center justify-center h-full\"><LoadingSpinner /></div>}\n                        {error && <p className=\"p-4 text-red-500\">{error}</p>}\n                        {xbrlOutput && <MarkdownRenderer content={'```xml\\n' + xbrlOutput.replace(/```xml\\n|```/g, '') + '\\n```'} />}\n                        {!isLoading && xbrlOutput && <button onClick={() => navigator.clipboard.writeText(xbrlOutput)} className=\"absolute top-2 right-2 px-2 py-1 bg-gray-100 hover:bg-gray-200 rounded-md text-xs\">Copy XML</button>}\n                        {!isLoading && !xbrlOutput && !error && <div className=\"text-text-secondary h-full flex items-center justify-center\">Output will appear here.</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};"],"names":["exampleJson","XbrlConverter","initialJsonInput","jsonInput","setJsonInput","useState","xbrlOutput","setXbrlOutput","isLoading","setIsLoading","error","setError","handleConvert","useCallback","jsonToConvert","stream","convertJsonToXbrlStream","fullResponse","chunk","err","errorMessage","jsxs","jsx","XbrlConverterIcon","e","LoadingSpinner","MarkdownRenderer"],"mappings":"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"}