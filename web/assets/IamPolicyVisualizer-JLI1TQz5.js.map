{"version":3,"file":"IamPolicyVisualizer-JLI1TQz5.js","sources":["../../services/gcpService.ts","../../components/features/IamPolicyVisualizer.tsx"],"sourcesContent":["import { ensureGapiClient } from './googleApiService.ts';\nimport { logError, measurePerformance } from './telemetryService.ts';\n\ndeclare var gapi: any;\n\n/**\n * Tests a set of permissions against a specified GCP resource.\n * @param resource The full resource name of the GCP resource (e.g., '//cloudresourcemanager.googleapis.com/projects/my-project').\n * @param permissions An array of permission strings to test (e.g., ['storage.objects.create', 'storage.objects.get']).\n * @returns A promise that resolves with the API response, containing the set of permissions the caller is allowed.\n */\nexport const testIamPermissions = async (resource: string, permissions: string[]): Promise<{ permissions: string[] }> => {\n    return measurePerformance('gcp.testIamPermissions', async () => {\n        try {\n            const isReady = await ensureGapiClient();\n            if (!isReady) throw new Error(\"Google API client not ready.\");\n\n            // The resource name for IAM API is slightly different\n            const iamResourcePath = resource.startsWith('//') ? resource.substring(2) : resource;\n\n            const response = await gapi.client.iam.permissions.testIamPermissions({\n                resource: iamResourcePath,\n                resource_body: { permissions }\n            });\n\n            return response.result;\n        } catch (error) {\n            logError(error as Error, {\n                service: 'gcpService',\n                function: 'testIamPermissions',\n                resource\n            });\n            // Re-throw a more user-friendly error\n            const gapiError = error as any;\n            if (gapiError.result?.error?.message) {\n                 throw new Error(`GCP API Error: ${gapiError.result.error.message}`);\n            }\n            throw error;\n        }\n    });\n};","import React, { useState, useCallback, useMemo } from 'react';\nimport { testIamPermissions } from '../../services/gcpService.ts';\nimport { useGlobalState } from '../../contexts/GlobalStateContext.tsx';\nimport { GcpIcon, SparklesIcon, XMarkIcon } from '../icons.tsx';\nimport { LoadingSpinner } from '../shared/index.tsx';\n\ntype SimulationStatus = 'idle' | 'running' | 'completed' | 'error';\ntype NodeStatus = 'neutral' | 'pending' | 'success' | 'fail' | 'partial';\n\ninterface ResourceNode {\n    id: string; // The full resource name\n    name: string;\n    type: 'project' | 'bucket' | 'instance' | 'unknown';\n    status: NodeStatus;\n    results?: { permission: string; granted: boolean }[];\n}\n\nconst COMMON_ROLES = {\n    'Viewer': ['resourcemanager.projects.get', 'storage.objects.list', 'compute.instances.list'],\n    'Editor': ['storage.objects.create', 'storage.objects.delete', 'compute.instances.start', 'compute.instances.stop'],\n    'Storage Object Admin': ['storage.objects.create', 'storage.objects.delete', 'storage.objects.get', 'storage.objects.list', 'storage.objects.update'],\n};\n\nconst getResourceType = (resourceId: string): ResourceNode['type'] => {\n    if (resourceId.includes('/projects/')) return 'project';\n    if (resourceId.includes('/b/')) return 'bucket';\n    if (resourceId.includes('/instances/')) return 'instance';\n    return 'unknown';\n};\n\nexport const IamPolicyVisualizer: React.FC = () => {\n    const { state } = useGlobalState();\n    const [resources, setResources] = useState<ResourceNode[]>([]);\n    const [newResource, setNewResource] = useState('//cloudresourcemanager.googleapis.com/projects/your-gcp-project-id');\n    const [permissions, setPermissions] = useState('storage.objects.get\\nstorage.objects.create');\n    const [simulationStatus, setSimulationStatus] = useState<SimulationStatus>('idle');\n    const [error, setError] = useState('');\n    const [selectedNode, setSelectedNode] = useState<ResourceNode | null>(null);\n\n    const permissionList = useMemo(() => permissions.split('\\n').map(p => p.trim()).filter(Boolean), [permissions]);\n\n    const handleAddResource = () => {\n        if (newResource.trim() && !resources.find(r => r.id === newResource)) {\n            setResources(prev => [...prev, {\n                id: newResource,\n                name: newResource.split('/').pop() || newResource,\n                type: getResourceType(newResource),\n                status: 'neutral',\n            }]);\n            setNewResource('');\n        }\n    };\n\n    const handleRunSimulation = useCallback(async () => {\n        if (!state.user) {\n            setError('You must be signed in to run a simulation.');\n            return;\n        }\n        if (resources.length === 0 || permissionList.length === 0) {\n            setError('Please add at least one resource and one permission.');\n            return;\n        }\n\n        setSimulationStatus('running');\n        setError('');\n        setSelectedNode(null);\n        setResources(r => r.map(res => ({ ...res, status: 'pending', results: [] })));\n\n        const promises = resources.map(resource =>\n            testIamPermissions(resource.id, permissionList)\n                .then(result => ({ id: resource.id, success: true, data: result }))\n                .catch(err => ({ id: resource.id, success: false, error: err }))\n        );\n\n        const results = await Promise.allSettled(promises);\n\n        setResources(prevResources => prevResources.map(resource => {\n            const result: any = results.find((r: any) => r.value?.id === resource.id);\n            if (!result || !result.value.success) {\n                return { ...resource, status: 'fail' as NodeStatus };\n            }\n            \n            const grantedPermissions = result.value.data.permissions || [];\n            const permissionResults = permissionList.map(p => ({ permission: p, granted: grantedPermissions.includes(p) }));\n            const allGranted = permissionResults.every(r => r.granted);\n            const noneGranted = permissionResults.every(r => !r.granted);\n\n            let status: NodeStatus = 'partial';\n            if (allGranted) status = 'success';\n            if (noneGranted) status = 'fail';\n\n            return { ...resource, status, results: permissionResults };\n        }));\n\n        setSimulationStatus('completed');\n\n    }, [resources, permissionList, state.user]);\n    \n    const nodeColorClass: Record<NodeStatus, string> = {\n        neutral: 'border-slate-600',\n        pending: 'border-yellow-500 animate-pulse',\n        success: 'border-green-500',\n        fail: 'border-red-500',\n        partial: 'border-orange-500',\n    };\n\n    return (\n        <div className=\"h-full flex flex-col p-4 sm:p-6 lg:p-8 text-text-primary bg-background\">\n            {selectedNode && (\n                <div className=\"fixed inset-0 bg-black/60 z-50 flex items-center justify-center\" onClick={() => setSelectedNode(null)}>\n                    <div className=\"bg-surface rounded-lg shadow-xl p-6 w-full max-w-lg animate-pop-in\" onClick={e => e.stopPropagation()}>\n                        <h3 className=\"text-lg font-bold truncate\">{selectedNode.name}</h3>\n                        <p className=\"text-xs text-text-secondary font-mono mb-4\">{selectedNode.id}</p>\n                        <ul className=\"space-y-2 max-h-96 overflow-y-auto\">\n                            {selectedNode.results?.map(res => (\n                                <li key={res.permission} className={`flex items-center justify-between p-2 rounded text-sm ${res.granted ? 'bg-green-500/10' : 'bg-red-500/10'}`}>\n                                    <span className=\"font-mono\">{res.permission}</span>\n                                    <span className={`font-bold ${res.granted ? 'text-green-500' : 'text-red-500'}`}>{res.granted ? 'GRANTED' : 'DENIED'}</span>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            )}\n            <header className=\"mb-6\"><h1 className=\"text-3xl font-bold flex items-center\"><GcpIcon /><span className=\"ml-3\">GCP IAM Policy Visualizer</span></h1><p className=\"text-text-secondary mt-1\">Visually test and audit GCP IAM permissions in real-time across your resources.</p></header>\n            <div className=\"flex-grow grid grid-cols-1 lg:grid-cols-3 gap-6 min-h-0\">\n                <aside className=\"lg:col-span-1 bg-surface p-4 rounded-lg border border-border flex flex-col gap-4\">\n                    <h3 className=\"text-xl font-bold\">Simulation Controls</h3>\n                    <div><label className=\"text-sm font-semibold\">1. Add Resource</label><div className=\"flex gap-1 mt-1\"><input value={newResource} onChange={e => setNewResource(e.target.value)} placeholder=\"Full GCP resource name...\" className=\"flex-grow p-2 bg-background border rounded text-xs\" /><button onClick={handleAddResource} className=\"btn-primary px-3 text-sm\">+</button></div></div>\n                    <div><label className=\"text-sm font-semibold\">2. Define Permission Set</label><select onChange={e => setPermissions(COMMON_ROLES[e.target.value as keyof typeof COMMON_ROLES]?.join('\\n') || '')} className=\"w-full mt-1 p-2 bg-background border rounded text-xs mb-1\"><option>Load common role...</option>{Object.keys(COMMON_ROLES).map(r => <option key={r}>{r}</option>)}</select><textarea value={permissions} onChange={e => setPermissions(e.target.value)} placeholder=\"One permission per line...\" className=\"w-full h-32 p-2 bg-background border rounded text-xs font-mono\"/></div>\n                    <button onClick={handleRunSimulation} disabled={simulationStatus === 'running'} className=\"btn-primary py-3 flex items-center justify-center gap-2\"><SparklesIcon /> {simulationStatus === 'running' ? 'Simulating...' : 'Run Simulation'}</button>\n                    {error && <p className=\"text-red-500 text-xs text-center\">{error}</p>}\n                </aside>\n                <main className=\"lg:col-span-2 bg-gray-50 dark:bg-slate-900/50 rounded-lg p-4 border-2 border-dashed border-border overflow-auto relative\">\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                        {resources.map(res => (\n                            <div key={res.id} onClick={() => res.results && setSelectedNode(res)} className={`p-4 bg-surface rounded-lg border-4 transition-colors duration-500 ${nodeColorClass[res.status]} ${res.results ? 'cursor-pointer hover:scale-105' : ''}`}>\n                                <h4 className=\"font-bold truncate\">{res.name}</h4>\n                                <p className=\"text-xs text-text-secondary capitalize\">{res.type}</p>\n                            </div>\n                        ))}\n                    </div>\n                    {resources.length === 0 && <div className=\"absolute inset-0 flex items-center justify-center text-text-secondary\">Add resources to begin your simulation.</div>}\n                </main>\n            </div>\n        </div>\n    );\n};"],"names":["testIamPermissions","resource","permissions","measurePerformance","ensureGapiClient","iamResourcePath","error","logError","gapiError","COMMON_ROLES","getResourceType","resourceId","IamPolicyVisualizer","state","useGlobalState","resources","setResources","useState","newResource","setNewResource","setPermissions","simulationStatus","setSimulationStatus","setError","selectedNode","setSelectedNode","permissionList","useMemo","p","handleAddResource","r","prev","handleRunSimulation","useCallback","res","promises","result","err","results","prevResources","grantedPermissions","permissionResults","allGranted","noneGranted","status","nodeColorClass","jsxs","e","jsx","GcpIcon","SparklesIcon"],"mappings":"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"}