// Copyright James Burvel Oâ€™Callaghan III
// President Citibank Demo Business Inc.

{"version":3,"file":"db-DoDjOlgE.js","sources":["../../services/mocking/db.ts"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n*/\n\nimport { openDB, DBSchema } from 'idb';\n\nconst DB_NAME = 'devcore-mock-db';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'mock-collections';\n\ninterface MockDB extends DBSchema {\n  [STORE_NAME]: {\n    key: string;\n    value: {\n        id: string;\n        schemaDescription: string;\n        data: any[];\n    };\n  };\n}\n\nconst dbPromise = openDB<MockDB>(DB_NAME, DB_VERSION, {\n  upgrade(db) {\n    db.createObjectStore(STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nexport const saveMockCollection = async (collection: { id: string; schemaDescription: string; data: any[] }): Promise<void> => {\n  const db = await dbPromise;\n  await db.put(STORE_NAME, collection);\n};\n\nexport const getMockCollection = async (id: string): Promise<{ id: string; schemaDescription: string; data: any[] } | undefined> => {\n  const db = await dbPromise;\n  return db.get(STORE_NAME, id);\n};\n\nexport const getAllMockCollections = async (): Promise<{ id: string; schemaDescription: string; data: any[] }[]> => {\n    const db = await dbPromise;\n    return db.getAll(STORE_NAME);\n}\n\nexport const deleteMockCollection = async (id: string): Promise<void> => {\n  const db = await dbPromise;\n  await db.delete(STORE_NAME, id);\n};\n"],"names":["DB_NAME","DB_VERSION","STORE_NAME","dbPromise","openDB","db","saveMockCollection","collection","getAllMockCollections"],"mappings":"sCAAA;AAAA;AAAA;AAAA,EAOA,MAAMA,EAAU,kBACVC,EAAa,EACbC,EAAa,mBAabC,EAAYC,EAAeJ,EAASC,EAAY,CACpD,QAAQI,EAAI,CACVA,EAAG,kBAAkBH,EAAY,CAAE,QAAS,KAAM,CACpD,CACF,CAAC,EAEYI,EAAqB,MAAOC,GAAsF,CAE7H,MADW,MAAMJ,GACR,IAAID,EAAYK,CAAU,CACrC,EAOaC,EAAwB,UACtB,MAAML,GACP,OAAOD,CAAU"}