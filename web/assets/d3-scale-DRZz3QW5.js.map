{"version":3,"file":"d3-scale-DRZz3QW5.js","sources":["../../node_modules/d3-scale/src/init.js","../../node_modules/d3-scale/src/ordinal.js","../../node_modules/d3-scale/src/band.js","../../node_modules/d3-scale/src/constant.js","../../node_modules/d3-scale/src/number.js","../../node_modules/d3-scale/src/continuous.js","../../node_modules/d3-scale/src/tickFormat.js","../../node_modules/d3-scale/src/linear.js","../../node_modules/d3-scale/src/nice.js","../../node_modules/d3-scale/src/time.js"],"sourcesContent":["export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n"],"names":["initRange","domain","range","implicit","ordinal","index","InternMap","unknown","scale","d","i","_","value","band","ordinalRange","r0","r1","step","bandwidth","round","paddingInner","paddingOuter","align","rescale","n","reverse","start","stop","values","sequence","constants","x","number","unit","identity","normalize","a","b","constant","clamper","t","bimap","interpolate","d0","d1","polymap","j","r","bisect","copy","source","target","transformer","interpolateValue","transform","untransform","clamp","piecewise","output","input","y","interpolateNumber","interpolateRound","u","continuous","tickFormat","count","specifier","tickStep","precision","formatSpecifier","precisionPrefix","formatPrefix","precisionRound","precisionFixed","format","linearish","ticks","i0","i1","prestep","maxIter","tickIncrement","linear","nice","interval","x0","x1","date","calendar","tickInterval","year","month","week","day","hour","minute","second","invert","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","time","timeTicks","timeTickInterval","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeFormat"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}