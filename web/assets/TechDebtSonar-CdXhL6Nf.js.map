{"version":3,"file":"TechDebtSonar-CdXhL6Nf.js","sources":["../../components/features/TechDebtSonar.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { detectCodeSmells } from '../../services/aiService.ts';\nimport type { CodeSmell } from '../../types.ts';\nimport { MagnifyingGlassIcon } from '../icons.tsx';\nimport { LoadingSpinner } from '../shared/index.tsx';\n\nconst exampleCode = `class DataProcessor {\n    process(data) {\n        // Long method with multiple responsibilities\n        if (data.type === 'A') {\n            const results = [];\n            for (let i = 0; i < data.items.length; i++) {\n                // complex logic\n                const item = data.items[i];\n                if(item.value > 100) {\n                   results.push({ ...item, status: 'processed' });\n                }\n            }\n            return results;\n        } else {\n            // Duplicated logic\n            const results = [];\n            for (let i = 0; i < data.items.length; i++) {\n                const item = data.items[i];\n                 if(item.value > 100) {\n                   results.push({ ...item, status: 'processed_special' });\n                }\n            }\n            return results;\n        }\n    }\n}`;\n\nexport const TechDebtSonar: React.FC = () => {\n    const [code, setCode] = useState(exampleCode);\n    const [smells, setSmells] = useState<CodeSmell[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const handleScan = useCallback(async () => {\n        if (!code.trim()) {\n            setError('Please provide code to scan.');\n            return;\n        }\n        setIsLoading(true);\n        setError('');\n        setSmells([]);\n        try {\n            const result = await detectCodeSmells(code);\n            setSmells(result);\n        } catch (err) {\n            setError(err instanceof Error ? err.message : 'An unknown error occurred.');\n        } finally {\n            setIsLoading(false);\n        }\n    }, [code]);\n\n    return (\n        <div className=\"h-full flex flex-col p-4 sm:p-6 lg:p-8 text-text-primary\">\n            <header className=\"mb-6\">\n                <h1 className=\"text-3xl font-bold flex items-center\">\n                    <MagnifyingGlassIcon />\n                    <span className=\"ml-3\">Tech Debt Sonar</span>\n                </h1>\n                <p className=\"text-text-secondary mt-1\">Scan code to find code smells and areas with high complexity.</p>\n            </header>\n            <div className=\"flex-grow grid grid-cols-1 lg:grid-cols-2 gap-6 min-h-0\">\n                <div className=\"flex flex-col\">\n                    <label className=\"text-sm font-medium mb-2\">Code to Analyze</label>\n                    <textarea value={code} onChange={e => setCode(e.target.value)} className=\"flex-grow p-2 bg-surface border rounded font-mono text-xs\"/>\n                    <button onClick={handleScan} disabled={isLoading} className=\"btn-primary w-full mt-4 py-3\">{isLoading ? <LoadingSpinner/> : 'Scan for Code Smells'}</button>\n                </div>\n                <div className=\"flex flex-col\">\n                    <label className=\"text-sm font-medium mb-2\">Detected Smells</label>\n                    <div className=\"flex-grow p-2 bg-background border rounded overflow-auto\">\n                        {isLoading && <div className=\"flex justify-center items-center h-full\"><LoadingSpinner /></div>}\n                        {error && <p className=\"text-red-500 p-4\">{error}</p>}\n                        {!isLoading && smells.length === 0 && <p className=\"text-text-secondary text-center pt-8\">No smells detected, or scan not run.</p>}\n                        {smells.length > 0 && (\n                            <div className=\"space-y-3\">\n                                {smells.map((smell, i) => (\n                                    <div key={i} className=\"p-3 bg-surface border border-border rounded-lg\">\n                                        <div className=\"flex justify-between items-center\">\n                                            <h4 className=\"font-bold text-primary\">{smell.smell}</h4>\n                                            <span className=\"text-xs font-mono bg-gray-100 dark:bg-slate-700 px-2 py-1 rounded\">Line: {smell.line}</span>\n                                        </div>\n                                        <p className=\"text-sm mt-1\">{smell.explanation}</p>\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"names":["exampleCode","TechDebtSonar","code","setCode","useState","smells","setSmells","isLoading","setIsLoading","error","setError","handleScan","useCallback","result","detectCodeSmells","err","jsxs","jsx","MagnifyingGlassIcon","e","LoadingSpinner","smell","i"],"mappings":"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"}