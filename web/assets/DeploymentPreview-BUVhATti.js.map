{"version":3,"file":"DeploymentPreview-BUVhATti.js","sources":["../../components/features/DeploymentPreview.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { getAllFiles, getFileByPath } from '../../services/dbService.ts';\nimport type { GeneratedFile } from '../../types.ts';\nimport { CloudIcon } from '../icons.tsx';\nimport { LoadingSpinner } from '../shared/index.tsx';\n\nexport const DeploymentPreview: React.FC = () => {\n    const [files, setFiles] = useState<GeneratedFile[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n\n    useEffect(() => {\n        const loadAndRender = async () => {\n            setIsLoading(true);\n            setError('');\n            try {\n                const allFiles = await getAllFiles();\n                if (allFiles.length === 0) {\n                    setError('No files generated by AI Feature Builder found.');\n                    setFiles([]);\n                    setIsLoading(false);\n                    return;\n                }\n                setFiles(allFiles);\n\n                let indexHtmlFile = allFiles.find(f => f.filePath.endsWith('index.html'));\n                if (!indexHtmlFile) {\n                    setError('No index.html file found in the generated files.');\n                    setIsLoading(false);\n                    return;\n                }\n\n                let content = indexHtmlFile.content;\n                \n                // Create blob URLs for all assets and replace relative paths\n                const blobUrlMap = new Map<string, string>();\n                for (const file of allFiles) {\n                    const mimeType = file.filePath.endsWith('.css') ? 'text/css' : 'application/javascript';\n                    const blob = new Blob([file.content], { type: mimeType });\n                    blobUrlMap.set(file.filePath, URL.createObjectURL(blob));\n                }\n                \n                // Replace relative paths in index.html\n                content = content.replace(/(href|src)=[\"'](\\.?\\/)?([^\"']+)[\"']/g, (match, attr, prefix, path) => {\n                    const blobUrl = blobUrlMap.get(path);\n                    return blobUrl ? `${attr}=\"${blobUrl}\"` : match;\n                });\n\n                if (iframeRef.current) {\n                    iframeRef.current.srcdoc = content;\n                }\n\n            } catch (err) {\n                setError(err instanceof Error ? err.message : 'Failed to load files.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        loadAndRender();\n        \n        // Cleanup blob URLs on unmount\n        return () => {\n             // This is a bit tricky since we don't have the map here, but the browser will clean them up.\n        };\n    }, []);\n\n    return (\n        <div className=\"h-full flex flex-col p-4 sm:p-6 lg:p-8 text-text-primary\">\n            <header className=\"mb-6\">\n                <h1 className=\"text-3xl font-bold flex items-center\"><CloudIcon /><span className=\"ml-3\">Static Deployment Previewer</span></h1>\n                <p className=\"text-text-secondary mt-1\">Live preview of the static site generated by the AI Feature Builder.</p>\n            </header>\n            <div className=\"flex-grow grid grid-cols-1 lg:grid-cols-3 gap-6 min-h-0\">\n                <div className=\"lg:col-span-1 bg-surface p-4 border border-border rounded-lg overflow-y-auto\">\n                    <h3 className=\"font-bold mb-2\">File List</h3>\n                    <ul className=\"text-sm space-y-1\">\n                        {files.map(f => <li key={f.filePath} className=\"truncate p-1 bg-background rounded\">{f.filePath}</li>)}\n                    </ul>\n                </div>\n                <div className=\"lg:col-span-2 bg-background border-2 border-dashed border-border rounded-lg overflow-hidden\">\n                    {isLoading && <div className=\"flex justify-center items-center h-full\"><LoadingSpinner/></div>}\n                    {error && <div className=\"flex justify-center items-center h-full text-red-500\">{error}</div>}\n                    {!isLoading && !error && <iframe ref={iframeRef} title=\"Deployment Preview\" className=\"w-full h-full bg-white\"/>}\n                </div>\n            </div>\n        </div>\n    );\n};\n"],"names":["DeploymentPreview","files","setFiles","useState","isLoading","setIsLoading","error","setError","iframeRef","useRef","useEffect","allFiles","getAllFiles","indexHtmlFile","f","content","blobUrlMap","file","mimeType","blob","match","attr","prefix","path","blobUrl","err","jsxs","jsx","CloudIcon","LoadingSpinner"],"mappings":"0nFAMO,MAAMA,GAA8B,IAAM,CAC7C,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAA0B,CAAA,CAAE,EAChD,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAI,EACzC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAS,EAAE,EAC/BK,EAAYC,EAAAA,OAA0B,IAAI,EAEhDC,OAAAA,EAAAA,UAAU,MACgB,SAAY,CAC9BL,EAAa,EAAI,EACjBE,EAAS,EAAE,EACX,GAAI,CACA,MAAMI,EAAW,MAAMC,EAAA,EACvB,GAAID,EAAS,SAAW,EAAG,CACvBJ,EAAS,iDAAiD,EAC1DL,EAAS,CAAA,CAAE,EACXG,EAAa,EAAK,EAClB,MACJ,CACAH,EAASS,CAAQ,EAEjB,IAAIE,EAAgBF,EAAS,KAAKG,GAAKA,EAAE,SAAS,SAAS,YAAY,CAAC,EACxE,GAAI,CAACD,EAAe,CAChBN,EAAS,kDAAkD,EAC3DF,EAAa,EAAK,EAClB,MACJ,CAEA,IAAIU,EAAUF,EAAc,QAG5B,MAAMG,MAAiB,IACvB,UAAWC,KAAQN,EAAU,CACzB,MAAMO,EAAWD,EAAK,SAAS,SAAS,MAAM,EAAI,WAAa,yBACzDE,EAAO,IAAI,KAAK,CAACF,EAAK,OAAO,EAAG,CAAE,KAAMC,EAAU,EACxDF,EAAW,IAAIC,EAAK,SAAU,IAAI,gBAAgBE,CAAI,CAAC,CAC3D,CAGAJ,EAAUA,EAAQ,QAAQ,uCAAwC,CAACK,EAAOC,EAAMC,EAAQC,IAAS,CAC7F,MAAMC,EAAUR,EAAW,IAAIO,CAAI,EACnC,OAAOC,EAAU,GAAGH,CAAI,KAAKG,CAAO,IAAMJ,CAC9C,CAAC,EAEGZ,EAAU,UACVA,EAAU,QAAQ,OAASO,EAGnC,OAASU,EAAK,CACVlB,EAASkB,aAAe,MAAQA,EAAI,QAAU,uBAAuB,CACzE,QAAA,CACIpB,EAAa,EAAK,CACtB,CACJ,GAEA,EAGO,IAAM,CAEb,GACD,CAAA,CAAE,EAGDqB,EAAAA,KAAC,MAAA,CAAI,UAAU,2DACX,SAAA,CAAAA,EAAAA,KAAC,SAAA,CAAO,UAAU,OACd,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,uCAAuC,SAAA,CAAAC,EAAAA,IAACC,EAAA,EAAU,EAAED,EAAAA,IAAC,OAAA,CAAK,UAAU,OAAO,SAAA,6BAAA,CAA2B,CAAA,EAAO,EAC3HA,EAAAA,IAAC,IAAA,CAAE,UAAU,2BAA2B,SAAA,sEAAA,CAAoE,CAAA,EAChH,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,0DACX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,+EACX,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,iBAAiB,SAAA,YAAS,QACvC,KAAA,CAAG,UAAU,oBACT,SAAA1B,EAAM,IAAIa,GAAKa,EAAAA,IAAC,KAAA,CAAoB,UAAU,qCAAsC,SAAAb,EAAE,UAA9DA,EAAE,QAAqE,CAAK,CAAA,CACzG,CAAA,EACJ,EACAY,EAAAA,KAAC,MAAA,CAAI,UAAU,8FACV,SAAA,CAAAtB,SAAc,MAAA,CAAI,UAAU,0CAA0C,SAAAuB,MAACE,IAAc,EAAE,EACvFvB,GAASqB,EAAAA,IAAC,MAAA,CAAI,UAAU,uDAAwD,SAAArB,EAAM,EACtF,CAACF,GAAa,CAACE,GAASqB,EAAAA,IAAC,SAAA,CAAO,IAAKnB,EAAW,MAAM,qBAAqB,UAAU,wBAAA,CAAwB,CAAA,CAAA,CAClH,CAAA,CAAA,CACJ,CAAA,EACJ,CAER"}